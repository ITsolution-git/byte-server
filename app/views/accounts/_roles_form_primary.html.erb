<%
  # url = info.new_record? ? create_roles_accounts_path : update_roles_accounts_path
  # submit_val = info.new_record? ? "Create Manager" : "Update Manager"
  # update_val = info.new_record? ? false : true

  if @user_avatar.nil?
   @user_avatar = UserAvatar.new
  end
%>
<div class="row-fluid">
  <div class="roles_form_errors_container">

  </div>
  <div class="span12">
    <h6>Account Owner</h6>
    <% if current_user.avatar.try(:public_id) %>
      <div class: 'photo-display'>
        <%= cl_image_tag current_user.avatar.public_id,
          version: current_user.avatar.version,
          transformation: [
          { x: (current_user.avatar.crop_x if current_user.avatar.crop_x),
            y: (current_user.avatar.crop_y if current_user.avatar.crop_y),
            width: (current_user.avatar.crop_w if current_user.avatar.crop_w),
            height: (current_user.avatar.crop_h if current_user.avatar.crop_h), crop: :crop},
          {angle: current_user.avatar.angle}] %>
      </div>
  <% end %>
  </div>
    <%= form_for current_user, url: set_avatar_users_path, :html => {:id => :user_avatar_form}, method: :post do |f| %>
      <%= f.file_field :avatar, required: true %>
      <%= f.submit :value=>"Set Avatar", id: 'roles_form_submit', :class=>"btn btn-primary span12", :tabindex => 4, disable_with: "Please wait..." %>
    <% end %>
    <div class="existing-cashiers">
      <%= form_tag({}, {class: 'batch-delete-form', data: {source: 'users', error_class: 'flash_messages'}}) do %>
        <h4>Delete Cashiers</h4>
        <% current_user.restaurants.each do |restaurant| %>
          <% if restaurant.cashiers.count != 0 %>
            <h5><%= restaurant.name %></h5>
            <ul>
              <% restaurant.cashiers.each do |cashier| %>
                <li>
                  <%= check_box_tag(cashier.id, 1, false, {class: 'delete-item-action', data: {id: cashier.id}}) %>
                  <%= cashier.name %>
                </li>
              <% end %>
            </ul>
          <% end %>
        <% end %>
        <%= submit_tag 'Destroy', class: 'btn btn-danger' %>
      <% end %>
    </div>
    <div id="cashier-creator">
      <div class="span12">
        <h4>Create Cashier</h4>
      </div>
      <%= form_for(resource, :as => resource_name, :url => register_cashier_path, :html => {:autocomplete => "off"}) do |f| %>
        <%= f.hidden_field :role, value: CASHIER_ROLE %>
        <%#= f.label :employer_id %>
        <div class="row-fluid top10">
          <%= f.select :employer_id, options_for_select(current_user.restaurants.map{|r| [r.name, r.id]}), {}, {class: 'input-block-level'} %>
        </div>
        <div class="row-fluid top10">
          <%= f.text_field :first_name, :placeholder=>"First Name",:class=>"input-block-level" %>
        </div>
        <div class="row-fluid top10">
          <%= f.text_field :last_name, :autocomplete => :off, :placeholder=>"Last Name",:class=>"input-block-level" %>
        </div>

        <div class="row-fluid top10">
          <%= f.text_field :email, :placeholder=>"Email",:class=>"input-block-level" %>
        </div>
        <div class="row-fluid top10">
          <%= f.text_field :username, :autofocus => true, :placeholder => "Username",:class=>"input-block-level" %>
        </div>
        <div class="row-fluid top10">
          <%= f.text_field :zip, :placeholder=>"Zip",:class=>"input-block-level", :maxlength => 5, :value=>"#{@location.try(:zip)}" %>
        </div>
        <div class="row-fluid top10">
          <%= f.password_field :password, :placeholder=>"Password",:class=>"input-block-level" %>
        </div>
        <div class="row-fluid top10">
          <%= f.password_field :password_confirmation, :placeholder=>"Password Confirmation",:class=>"input-block-level" %>
        </div>
        <%= f.hidden_field :agree, value: true %>
        <%= f.submit %>
      <% end %>
    </div>
</div>
<div class="crop-helper">
  <%= render partial: 'shared/crop_helper', locals: {:model => 'user_avatar'} %>
</div>
<script type="text/javascript">
  $(".role_image").filestyle({
    input: false,
    buttonText: "Choose Image",
    classInput: "input-small"
  });
  Util.checkBrower();
  $('#info_phone').mask('(999) 999-9999');
  var account = new AccountForm();
  // account.modelName = 'info';
  // var roleform = Util.validate(account, {
  //   name: [
  //     Validate.Presence,
  //     [Validate.Length, { minimum: 3, maximum: 30 }],
  //   ],
  //   phone: [
  //     Validate.Presence,
  //   ],
  //   email: [
  //     Validate.Presence,
  //     Validate.Email,
  //   ],
  // });
  // $('#role_form_submit').click(function() {
  //   for (var element in roleform) {
  //     // important check that this is objects own property
  //     // not from prototype prop inherited
  //     if(roleform.hasOwnProperty(element)){
  //       if (roleform[element].validationFailed) {
  //         //return false;
  //       }
  //       else if (roleform[element].validationFailed == undefined) {
  //         $('#info_form').find("input[name='info[name]']").trigger("onblur");
  //         $('#info_form').find("input[name='info[phone]']").trigger("onblur");
  //         $('#info_form').find("input[name='info[email]']").trigger("onblur");
  //       }
  //     }
  //   }
  // });
</script>
